"use strict";
/*!
 * Copyright (C) Microsoft Corporation. All rights reserved.
 */var AppMagic;!function(e){!function(e){!function(e){e.DeviceFailedEventName="deviceFailed",e.DeviceAvilableStateChangedEventName="deviceAvilableStateChanged"}(e.MicrophoneConstants||(e.MicrophoneConstants={}))}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(e){var t=function(){function e(e){this._isDisposed=!1,this._stoppedEvent=new EventObject,this._deviceAvailableStateChangedEvent=new EventObject,this._doneRecordingEvent=new EventObject,this._isRecordingExternallyEvent=new EventObject,this._name=e}return Object.defineProperty(e.prototype,"stoppedEvent",{get:function(){return this._stoppedEvent},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"deviceAvailableStateChangedEvent",{get:function(){return this._deviceAvailableStateChangedEvent},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"doneRecordingEvent",{get:function(){return this._doneRecordingEvent},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isRecordingExternallyEvent",{get:function(){return this._isRecordingExternallyEvent},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"name",{get:function(){return this._name},enumerable:!1,configurable:!0}),e.prototype.initializeAsync=function(){return null},e.prototype.updateAvailableStatusAsync=function(e){},e.prototype.startRecordAsync=function(){return null},e.prototype.stopRecordAsync=function(){return null},e.prototype.dispose=function(){this._isDisposed||(this._isDisposed=!0,this._stoppedEvent.dispose(),this._deviceAvailableStateChangedEvent.dispose(),this._doneRecordingEvent.dispose(),this._isRecordingExternallyEvent.dispose())},e.prototype.isSupported=function(){return!0},e}();e.MicrophoneDriver=t}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(t){var i=function(i){function o(){return i.call(this,o.TEAMS_DRIVER_NAME)||this}return __extends(o,i),o.prototype.initializeAsync=function(){return this.isSupported()&&this._deviceAvailableStateChangedEvent.dispatch(!0),Promise.resolve(!0)},o.prototype.startRecordAsync=function(){var i=this;return this._isRecordingExternallyEvent.dispatch(!0),Cordova.exec((function(t){var o=t.useBlob?t.blob:Core.IO.Utility.Conversion.base64ToBlob(t.base64Preview,t.mimeType);i._currentBlobUri&&e.Utility.blobManager.release(i._currentBlobUri),i._currentBlobUri=e.Utility.blobManager.addBlob(o),e.Utility.blobManager.addRef(i._currentBlobUri),i._doneRecordingEvent.dispatch(),Core.Telemetry.Log.trackActivityEvent("TeamsMicrophoneDriver.startRecordAsync",{message:"Recording completed successfully"})}),(function(e){Core.Telemetry.Log.trackErrorEvent("TeamsMicrophoneDriver.startRecordAsync",[e]),i._isRecordingExternallyEvent.dispatch(!1);var o=new t.MicrophoneStoppedEvent(e,0);i._stoppedEvent.dispatch(o)}),"Microphone","recordMicrophone",[]),Promise.resolve()},o.prototype.stopRecordAsync=function(){return this._isRecordingExternallyEvent.dispatch(!1),Promise.resolve(this._currentBlobUri)},o.prototype.dispose=function(){return i.prototype.dispose.call(this),Promise.resolve()},o.prototype.isSupported=function(){return!0},o.TEAMS_DRIVER_NAME="TeamsMicrophoneDriver",o}(t.MicrophoneDriver);t.TeamsMicrophoneDriver=i}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(e){var t=function(){function t(e){this._microphoneId=null,this._onFailedHandler=null,this._onRecordLimitationExceededHandler=null,this._mediaCapture=null,this._audioStream=null,this._deviceClass=null,this._encodingProfile=null,this._settings=null,this._deviceList=[],this._microphoneId=e,this._isDisposed=!1,this._stoppedEvent=new EventObject,this._deviceAvailableStateChangedEvent=new EventObject,this._onFailedHandler=this._onFailed.bind(this),this._onRecordLimitationExceededHandler=this._onRecordLimitationExceeded.bind(this);try{this._deviceClass=Windows.Devices.Enumeration.DeviceClass.audioCapture,this._encodingProfile=Windows.Media.MediaProperties.MediaEncodingProfile.createM4a(Windows.Media.MediaProperties.AudioEncodingQuality.auto),this._settings=new Windows.Media.Capture.MediaCaptureInitializationSettings,this._settings.videoDeviceId="",this._settings.streamingCaptureMode=Windows.Media.Capture.StreamingCaptureMode.audio}catch(e){this._deviceClass=null,this._encodingProfile=null,this._settings=null}}return Object.defineProperty(t.prototype,"stoppedEvent",{get:function(){return this._stoppedEvent},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"deviceAvailableStateChanged",{get:function(){return this._deviceAvailableStateChangedEvent},enumerable:!1,configurable:!0}),t.prototype.initializeAsync=function(){var e=this;return null===this._deviceClass?(this._deviceList=[],Promise.resolve(!1)):t._enumerateDeviceIds(this._deviceClass,Windows).then((function(t){e._deviceList=t})).then(null,(function(e){})).then((function(){if(!e._isDisposed&&e._settings)return e._updateAvailableStatusAsync()})).then((function(){return!0}),(function(){return!1}))},t.prototype.startRecordAsync=function(){var e=this,t=Core.PromiseUtils.createCompletablePromise();this._audioStream=new Windows.Storage.Streams.InMemoryRandomAccessStream;try{this._mediaCapture.startRecordToStreamAsync(this._encodingProfile,this._audioStream).then((function(){t.complete()}),(function(i){e._onFailed(i),t.error("Starting Microphone didn't work. Here are some deatiles: "+i.message)}))}catch(e){t.error("Starting Microphone didn't work. Here are some deatiles: "+e.message)}return t.promise},t.prototype.stopRecordAsync=function(){var e=this,t=null,i=null;return Promise.resolve(null).then((function(){return e._mediaCapture.stopRecordAsync()})).then((function(){var t=e._encodingProfile.audio.type.toLowerCase()+"/"+e._encodingProfile.audio.subtype.toLowerCase();try{i=MSApp.createBlobFromRandomAccessStream(t,e._audioStream)}catch(e){throw new Error("converting RadomAccessStream to Blob didn't work")}return Promise.resolve(null)})).then((function(){return Core.IO.FileSystem.getAppDataFolderAsync()})).then((function(t){var i=Core.Utility.formatString("recording_{0}.{1}",Core.Utility.generate128BitUUID(),e._getFileExtension());return t.createFileAsync(i,Core.IO.CreationCollisionOption.OverwriteIfExists)})).then((function(e){return t=e.fullPath,e.writeBlobAsync(i)})).then((function(i){if(i)return e._stopDevice(),t;throw new Error("recording content wasn't saved")}))},t.prototype.updateAvailableStatusAsync=function(e){return this._microphoneId=e,this._updateAvailableStatusAsync()},t.prototype.dispose=function(){this._isDisposed||(this._isDisposed=!0,this._stoppedEvent.dispose(),this._deviceAvailableStateChangedEvent.dispose()),this._destroyMediaCapture(),this._stopDevice()},t.prototype._updateAvailableStatusAsync=function(){var e=this;if(this._deviceList.length>this._microphoneId&&this._microphoneId>=0){this._settings.audioDeviceId=this._deviceList[this._microphoneId],this._destroyMediaCapture(),this._mediaCapture=new Windows.Media.Capture.MediaCapture,this._mediaCapture.addEventListener("failed",this._onFailedHandler),this._mediaCapture.addEventListener("recordlimitationexceeded",this._onRecordLimitationExceededHandler);try{return this._mediaCapture.initializeAsync(this._settings).then((function(){e._isDisposed||e._deviceAvailableStateChangedEvent.dispatch(!0)}),(function(){e._isDisposed||e._deviceAvailableStateChangedEvent.dispatch(!1)}))}catch(e){}}return Promise.resolve().then((function(){e._deviceAvailableStateChangedEvent.dispatch(!1)}))},t.prototype._onFailed=function(t){this._stoppedEvent.dispatch(new e.MicrophoneStoppedEvent(t,e.MicrophoneStoppedEventCause.DeviceFailed)),this._stopDevice(),this._updateAvailableStatusAsync()},t.prototype._onRecordLimitationExceeded=function(t){this._stoppedEvent.dispatch(new e.MicrophoneStoppedEvent(t,e.MicrophoneStoppedEventCause.RecordLimitationExceeded))},t.prototype._stopDevice=function(){this._audioStream&&(this._audioStream.close(),this._audioStream=null)},t.prototype._destroyMediaCapture=function(){this._mediaCapture&&(this._mediaCapture.removeEventListener("failed",this._onFailedHandler),this._mediaCapture.removeEventListener("recordlimitationexceeded",this._onRecordLimitationExceededHandler),this._mediaCapture=null)},t._enumerateDeviceIds=function(e,t){return t.Devices.Enumeration.DeviceInformation.findAllAsync(e).then((function(e){return Contracts.checkArray(e),Core.Environment.getFormFactor()===Core.Environment.FormFactor.Phone&&(e=e.filter((function(e){return 0!==e.enclosureLocation.panel}))),e.map((function(e){return e.id}))}))},t.prototype._getFileExtension=function(){var e=this._encodingProfile.audio.subtype.toLowerCase();return"aac"===e?"m4a":e},t}();e.WindowsMicrophoneDevice=t}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(t){var i=function(t){function i(){var e=t.call(this,"WebMicrophoneDriver")||this;return e._chunks=[],e}return __extends(i,t),i.prototype.initializeAsync=function(){return this.isSupported()&&this._deviceAvailableStateChangedEvent.dispatch(!0),Promise.resolve(!0)},i.prototype.startRecordAsync=function(){var t=this;if(this.isSupported()){var i=Core.PromiseUtils.createCompletablePromise();this._recordPromise=Core.PromiseUtils.createCompletablePromise();return navigator.mediaDevices.getUserMedia({audio:!0}).then((function(o){var n;MediaRecorder.isTypeSupported("audio/ogg;codecs=opus")?n={mimeType:"audio/ogg"}:MediaRecorder.isTypeSupported("audio/webm;codecs=opus")&&(n={mimeType:"audio/webm"}),t._mediaRecorder=n?new MediaRecorder(o,n):new MediaRecorder(o),t._mediaRecorder.ondataavailable=function(e){t._chunks.push(e.data)},t._mediaRecorder.onstop=function(i){var o={type:"application/octet-stream"};MediaRecorder.isTypeSupported("audio/ogg")?o={type:"audio/ogg"}:MediaRecorder.isTypeSupported("audio/webm")?o={type:"audio/webm"}:Core.Log.verbose("WebMicrophoneDriver: no supported type, using octet-stream.");var n=new Blob(t._chunks,o);t._chunks=[],t._currentBlobUri&&e.Utility.blobManager.release(t._currentBlobUri),t._currentBlobUri=e.Utility.blobManager.addBlob(n),e.Utility.blobManager.addRef(t._currentBlobUri),t._recordPromise.complete(t._currentBlobUri)},t._mediaRecorder.start(),i.complete()}),(function(e){i.error(e)})),i.promise}return Promise.resolve(null)},i.prototype.stopRecordAsync=function(){return this._mediaRecorder?(this._mediaRecorder.stop(),this._recordPromise.promise.then((function(e){return e}))):Promise.resolve(null)},i.prototype.updateAvailableStatusAsync=function(e){return this._deviceAvailableStateChangedEvent.dispatch(!0),Promise.resolve(null)},i.prototype.dispose=function(){t.prototype.dispose.call(this),this._currentBlobUri&&(e.Utility.blobManager.release(this._currentBlobUri),this._currentBlobUri=null),this._mediaRecorder=null},i.prototype.isSupported=function(){return navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&"function"==typeof MediaRecorder},i}(t.MicrophoneDriver);t.WebMicrophoneDriver=i}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(e){var t=function(){function t(){}return t.getMicrophoneDriver=function(t){return Core.Environment.isTeamsMobile()?new e.TeamsMicrophoneDriver:Core.Environment.hasCordovaAndNotAuthoringTool()&&!Core.Environment.isWebPlayerApp()?new e.CordovaMicrophoneDriver(t):Core.Environment.isWebAuthoring()||Core.Environment.isWebPlayerApp()?new e.WebMicrophoneDriver:WinJS.Utilities.hasWinRT?new e.WindowsMicrophoneDriver(t):void 0},t}();e.MicrophoneDriverFactory=t}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(e){!function(e){e[e.DeviceFailed=0]="DeviceFailed",e[e.RecordLimitationExceeded=1]="RecordLimitationExceeded",e[e.Disposed=2]="Disposed",e[e.UserEvent=3]="UserEvent"}(e.MicrophoneStoppedEventCause||(e.MicrophoneStoppedEventCause={}));var t=function(){function e(e,t){this._stoppedEventMessage=e,this._stoppedEventCause=t}return Object.defineProperty(e.prototype,"stoppedEventMessage",{get:function(){return this._stoppedEventMessage},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"stoppedEventCause",{get:function(){return this._stoppedEventCause},enumerable:!1,configurable:!0}),e}();e.MicrophoneStoppedEvent=t}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(t){var i=function(i){function o(e){var o=i.call(this,"CordovaMicrophoneDriver")||this;return o._microphoneId=null,o._onDeviceStoppedHandler=null,o._onDeviceAvilableStateChangedHandler=null,SienaMicPlugin.eventPipelineAvailable&&(o._onDeviceAvilableStateChangedHandler=function(e){o._deviceAvailableStateChangedEvent.dispatch(e)},o._onDeviceStoppedHandler=function(e){o._stoppedEvent.dispatch(e)},SienaMicPlugin.subscribeToEvent(t.MicrophoneConstants.DeviceFailedEventName,o._onDeviceStoppedHandler),SienaMicPlugin.subscribeToEvent(t.MicrophoneConstants.DeviceAvilableStateChangedEventName,o._onDeviceAvilableStateChangedHandler)),o._microphoneId=e,o}return __extends(o,i),o.prototype.initializeAsync=function(){return this.updateAvailableStatusAsync(this._microphoneId).then((function(){return!0}),(function(){return!1}))},o.prototype.startRecordAsync=function(){return SienaMicPlugin.startMicrophone()},o.prototype.stopRecordAsync=function(){return SienaMicPlugin.stopMicrophone()},o.prototype.updateAvailableStatusAsync=function(t){var i=this;return(e.Controls.isImprovedMediaCaptureEnabled?SienaMicPlugin.initializeMicrophoneV2(t):SienaMicPlugin.initializeMicrophone(t)).then((function(){i._deviceAvailableStateChangedEvent.dispatch(!0)}),(function(e){i._deviceAvailableStateChangedEvent.dispatch(!1)}))},o.prototype.dispose=function(){i.prototype.dispose.call(this),SienaMicPlugin.disposeMicrophone()},o}(t.MicrophoneDriver);t.CordovaMicrophoneDriver=i}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(e){var t=function(t){function i(i){var o=t.call(this,"WindowsMicrophoneDriver")||this;return o._deviceStoppedHandler=null,o._onDeviceAvailableStateChangedHandler=null,o._windowsMicrophoneDevice=new e.WindowsMicrophoneDevice(i),o._deviceStoppedHandler=o._onDeviceStopped.bind(o),o._onDeviceAvailableStateChangedHandler=o._onDeviceAvailableStateChanged.bind(o),o._deviceStoppedListener=o._windowsMicrophoneDevice.stoppedEvent.addListener(o._deviceStoppedHandler),o._deviceAvailableListener=o._windowsMicrophoneDevice.deviceAvailableStateChanged.addListener(o._onDeviceAvailableStateChangedHandler),o}return __extends(i,t),i.prototype.initializeAsync=function(){return this._windowsMicrophoneDevice.initializeAsync()},i.prototype.startRecordAsync=function(){return this._windowsMicrophoneDevice.startRecordAsync()},i.prototype.stopRecordAsync=function(){return this._windowsMicrophoneDevice.stopRecordAsync()},i.prototype.updateAvailableStatusAsync=function(e){return this._windowsMicrophoneDevice.updateAvailableStatusAsync(e)},i.prototype.dispose=function(){this._deviceStoppedListener.dispose(),this._deviceAvailableListener.dispose(),this._windowsMicrophoneDevice.dispose(),t.prototype.dispose.call(this)},i.prototype._onDeviceStopped=function(e){this._stoppedEvent.dispatch(e)},i.prototype._onDeviceAvailableStateChanged=function(e){this._deviceAvailableStateChangedEvent.dispatch(e)},i}(e.MicrophoneDriver);e.WindowsMicrophoneDriver=t}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(t){var i=function(){function i(){}return i.prototype.initControlContext=function(e){e.isLoaded=!0,e.currentMediaRef=null;var i=t.MicrophoneDriverFactory.getMicrophoneDriver(e.modelProperties.Mic.getValue()),o={};i?(o.deviceDriver=i.name,i.isSupported()||(o.message="driver unsupported")):o.message="driver not found",t.TelemetryHelper.trackActivityEvent(Core.Telemetry.ControlOperationNames.microphoneInitControlContext,e,o),e.microphoneViewModel=new t.MicrophoneViewModel(e,i),e.backgroundImage=ko.observable("")},i.prototype.disposeControlContext=function(e){e.microphoneViewModel.dispose(),e.microphoneViewModel=null,e.currentMediaRef&&e.currentMediaRef.dispose(),e.isLoaded=!1},i.prototype.initView=function(e,i){this._updateBackgroundImage(i,i.modelProperties.Image.getValue()),i.microphoneViewModel.initialize(),ko.applyBindings(i,e);var o=e.querySelector("button");i._accessibilityItem=t.AccessibilityHelper.createAccessibilityItem(i,o),t.AccessibilityManager.registerItem(i._accessibilityItem)},i.prototype.disposeView=function(e,i){i._accessibilityItem&&(t.AccessibilityManager.unregisterItem(i._accessibilityItem),i._accessibilityItem.dispose(),i._accessibilityItem=null)},i.prototype.onChangeDisplayMode=function(e,t){t.microphoneViewModel.onChangeDisplayMode(e.newValue)},i.prototype.onChangeMic=function(e,t){null!==e.newValue&&t.microphoneViewModel.updateAvailableStatus(t.modelProperties.Mic.getValue())},i.prototype.onChangeReset=function(e,t){e.newValue&&e.newValue!==e.oldValue&&this.resetControl(t)},i.prototype.onChangeImage=function(e,t){this._updateBackgroundImage(t,e.newValue)},i.prototype.onChangeTabIndex=function(e,i){i.realized&&i._accessibilityItem&&t.AccessibilityHelper.updateTabIndex(i._accessibilityItem,i)},i.prototype.onChangeZIndex=function(e,i){i.realized&&i._accessibilityItem&&t.AccessibilityHelper.updateZIndex(i._accessibilityItem,i)},i.prototype.onChangeX=function(e,t){t.realized&&this._onChangeLocation(t)},i.prototype.onChangeY=function(e,t){t.realized&&this._onChangeLocation(t)},i.prototype.resetControl=function(e){e.microphoneViewModel.isRecording?e.microphoneViewModel.stopRecord().then((function(){e.modelProperties.Audio.setValue("")})):e.modelProperties.Audio.setValue("")},i.prototype._onChangeLocation=function(e){e._accessibilityItem&&t.AccessibilityHelper.updateLocation(e._accessibilityItem,e)},i.prototype._updateBackgroundImage=function(t,i){e.Utility.createMediaReferenceAsync(i).then((function(i){if(t.initialized)if(t.isLoaded){t.currentMediaRef&&t.currentMediaRef.dispose();var o=i?i.url.toString():"",n=e.Utility.formatUrlStringForCss(o);t.currentMediaRef=i,t.backgroundImage(n)}else i&&i.dispose()})).catch((function(){}))},i}();t.Microphone=i}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={})),function(e){!function(t){var i=function(){function i(t,i){var o=this;this._controlContext=null,this._displayMode=null,this._onStartFunction=null,this._onStopFunction=null,this._recordTimeTotal=null,this._isRecording=null,this._isDeviceAvailable=null,this._isRecordingExternally=null,this._onDeviceStoppedHandler=null,this._onDeviceAvailableStateChangedHandler=null,this._onDoneRecordingHandler=null,this._onIsRecordingExternallyStateChangedHandler=null,this._recordTimeStart=0,this._updateTimerId=null,this._updateTimerInterval=500,this._controlContext=t,this._controlEventData={deviceDriver:i.name};var n=t.modelProperties.DisplayMode?t.modelProperties.DisplayMode.getValue():e.Constants.DisplayMode.Disabled;this._displayMode=ko.observable(n),this._onStartFunction=t.behaviors.OnStart,this._onStopFunction=t.behaviors.OnStop,this._recordTimeTotal=ko.observable(""),this._isRecording=ko.observable(),this._isDeviceAvailable=ko.observable(!1),this.hasDeviceInit=ko.observable(!1),this._isRecordingExternally=ko.observable(!1),this._onDeviceStoppedHandler=this._onDeviceStopped.bind(this),this._onDeviceAvailableStateChangedHandler=this._onDeviceAvailableStateChanged.bind(this),this._onDoneRecordingHandler=this._onDoneRecording.bind(this),this._onIsRecordingExternallyStateChangedHandler=this._onIsRecordingExternallyStateChanged.bind(this),this.toggleRecord=this.toggleRecord.bind(this),this._microphoneDriver=i,this._deviceStoppedListener=this._microphoneDriver.stoppedEvent.addListener(this._onDeviceStoppedHandler),this._deviceAvailableListener=this._microphoneDriver.deviceAvailableStateChangedEvent.addListener(this._onDeviceAvailableStateChangedHandler),this._deviceDoneRecordingListener=this._microphoneDriver.doneRecordingEvent.addListener(this._onDoneRecordingHandler),this._isRecordingExternallyListener=this._microphoneDriver.isRecordingExternallyEvent.addListener(this._onIsRecordingExternallyStateChangedHandler),this.canRecord=ko.pureComputed((function(){return o.hasDeviceInit()&&o._isDeviceAvailable()&&o._displayMode()===e.Constants.DisplayMode.Edit})),this.status=ko.pureComputed((function(){return o.canRecord()&&!o.isRecordingExternally?o.isRecording?o.recordTimeTotal:e.Strings.StartRecording:o.isRecordingExternally?e.Strings.MicrophoneIsRecording:e.Strings.Unavailable})),this.actionLabel=ko.pureComputed((function(){var t=o._controlContext.properties.AccessibleLabel()||"";return t&&(t+="\n"),o.isRecording?t+=e.Strings.MicrophoneStop:t+=e.Strings.MicrophoneStart,t}))}return Object.defineProperty(i.prototype,"isRecording",{get:function(){return this._isRecording()},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"recordTimeTotal",{get:function(){return this._recordTimeTotal()},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"isRecordingExternally",{get:function(){return this._isRecordingExternally()},enumerable:!1,configurable:!0}),i.prototype.initialize=function(){var e=this;this._microphoneDriver.initializeAsync().then((function(t){return e.hasDeviceInit(t)}))},i.prototype.dispose=function(){this._deviceAvailableListener&&(this._deviceAvailableListener.dispose(),this._deviceAvailableListener=null),this._deviceStoppedListener&&(this._deviceStoppedListener.dispose(),this._deviceStoppedListener=null),this._deviceDoneRecordingListener&&(this._deviceDoneRecordingListener.dispose(),this._deviceDoneRecordingListener=null),this._isRecordingExternallyListener&&(this._isRecordingExternallyListener.dispose(),this._isRecordingExternallyListener=null),this._microphoneDriver&&(this._microphoneDriver.dispose(),this._microphoneDriver=null),this.actionLabel&&(this.actionLabel.dispose(),this.actionLabel=null),this.status&&(this.status.dispose(),this.status=null),this.canRecord&&(this.canRecord.dispose(),this.canRecord=null),this._onDeviceStopped=null,this._onStartFunction=null,this._onStopFunction=null,this._onDeviceStoppedHandler=null,this._onDeviceAvailableStateChangedHandler=null,this._onDoneRecordingHandler=null,this._onIsRecordingExternallyStateChangedHandler=null,this.toggleRecord=null},i.prototype.updateAvailableStatus=function(e){this._microphoneDriver.updateAvailableStatusAsync(e)},i.prototype.onChangeDisplayMode=function(e){this._displayMode(e),!this.canRecord()&&this._isRecording()&&this.stopRecord()},i.prototype.toggleRecord=function(){this.canRecord()&&!this.isRecordingExternally&&(this._isRecording()?this.stopRecord():this._startRecord())},i.prototype.stopRecord=function(){var e=this;return this._controlContext.behaviors.OnSelect(),this._microphoneDriver.stopRecordAsync().then((function(i){e._setStopRecordState(),i&&e._controlContext.modelProperties.Audio.setValue(i),e._onStopFunction();var o=__assign(__assign({},e._controlEventData),{message:"complete",deviceRecordTime:e._recordTimeTotal()});t.TelemetryHelper.trackActivityEvent(Core.Telemetry.ControlOperationNames.microphoneViewModelStopRecord,e._controlContext,o)}),(function(i){if(!Core.Utility.isCanceledError(i)){var o=__assign(__assign({},e._controlEventData),{message:"failed",errorMessage:Core.PromiseUtils.formatError(i),deviceRecordTime:e._recordTimeTotal()});t.TelemetryHelper.trackActivityEvent(Core.Telemetry.ControlOperationNames.microphoneViewModelStopRecord,e._controlContext,o)}}))},i.prototype._startRecord=function(){var i=this;this._controlContext.behaviors.OnSelect(),this._microphoneDriver.startRecordAsync().then((function(){i._recordTimeStart=Date.now(),i._isRecording(!0),i._recordTimeTotal(e.Utility.secondsToHHMMSS(0)),i._updateTimerId=setInterval(i._updateRecordTimeTotal,i._updateTimerInterval,i),i._onStartFunction();var o=__assign(__assign({},i._controlEventData),{message:"complete"});t.TelemetryHelper.trackActivityEvent(Core.Telemetry.ControlOperationNames.microphoneViewModelStartRecord,i._controlContext,o)}),(function(e){if(!Core.Utility.isCanceledError(e)){var o=__assign(__assign({},i._controlEventData),{message:"failed",errorMessage:Core.PromiseUtils.formatError(e)});t.TelemetryHelper.trackActivityEvent(Core.Telemetry.ControlOperationNames.microphoneViewModelStartRecord,i._controlContext,o)}}))},i.prototype._updateRecordTimeTotal=function(t){t._isRecording&&t._isRecording()&&t._recordTimeTotal(e.Utility.secondsToHHMMSS(Math.floor((Date.now()-t._recordTimeStart)/1e3)))},i.prototype._setStopRecordState=function(){this._isRecording(!1),null!==this._updateTimerId&&(clearInterval(this._updateTimerId),this._updateTimerId=null)},i.prototype._onDeviceStopped=function(e){switch(e.stoppedEventCause){case t.MicrophoneStoppedEventCause.DeviceFailed:case t.MicrophoneStoppedEventCause.Disposed:this._setStopRecordState();break;case t.MicrophoneStoppedEventCause.RecordLimitationExceeded:this._controlContext.onClick(this._controlContext)}},i.prototype._onDeviceAvailableStateChanged=function(e){this._isDeviceAvailable(e)},i.prototype._onIsRecordingExternallyStateChanged=function(e){this._controlContext.viewState.isAutoDisabled(e),this._isRecordingExternally(e)},i.prototype._onDoneRecording=function(){this._isRecording()&&this.stopRecord()},i}();t.MicrophoneViewModel=i}(e.Controls||(e.Controls={}))}(AppMagic||(AppMagic={}));
//# sourceMappingURL=Microphone.js.map